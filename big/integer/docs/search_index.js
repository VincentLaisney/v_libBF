var searchModuleIndex = ["libbf.big.integer",];
var searchIndex = ["Bigint","free","f64","+","add","-","sub","add_i64_ctx","add_i64","inc","dec","*","mul_2exp","mul_2exp_ctx","div_ctx","/","rem_ctx","%","rint","rint_ctx","str_base","str","int","i64","Round","Context","free","MathContext","get_def_ctx","get_bf_retval","context_init","context_end","bf_free","new","delete","from_u64","from_i64","set","from_f64","cmp","mul_ui","mul_si","divrem","divrem_ctx","remquo","round","sqrtrem","isqrt","get_exp_min","logic_or","logic_xor","logic_and","from_str_base","from_str",];
var searchModuleData = [["","libbf.big.integer.html"],];
var searchData = [["libbf.big.integer","","libbf.big.integer.html#Bigint","type "],["libbf.big.integer","","libbf.big.integer.html#Bigint.free","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.f64","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.+","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.add","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.-","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.sub","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.add_i64_ctx","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.add_i64","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.inc","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.dec","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.*","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.mul_2exp","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.mul_2exp_ctx","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.div_ctx","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint./","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.rem_ctx","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.%","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.rint","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.rint_ctx","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.str_base","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.str","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.int","fn (Bigint)"],["libbf.big.integer","","libbf.big.integer.html#Bigint.i64","fn (Bigint)"],["libbf.big.integer"," struct C.bfdec_t {      // /* must be kept identical to bf_t */      // struct ","libbf.big.integer.html#Round","enum "],["libbf.big.integer","","libbf.big.integer.html#Context","type "],["libbf.big.integer","","libbf.big.integer.html#Context.free","fn (Context)"],["libbf.big.integer","","libbf.big.integer.html#MathContext","struct "],["libbf.big.integer","","libbf.big.integer.html#get_def_ctx","fn "],["libbf.big.integer","","libbf.big.integer.html#get_bf_retval","fn "],["libbf.big.integer","","libbf.big.integer.html#context_init","fn "],["libbf.big.integer","","libbf.big.integer.html#context_end","fn "],["libbf.big.integer","","libbf.big.integer.html#bf_free","fn "],["libbf.big.integer","","libbf.big.integer.html#new","fn "],["libbf.big.integer","","libbf.big.integer.html#delete","fn "],["libbf.big.integer","","libbf.big.integer.html#from_u64","fn "],["libbf.big.integer","","libbf.big.integer.html#from_i64","fn "],["libbf.big.integer","","libbf.big.integer.html#set","fn "],["libbf.big.integer","","libbf.big.integer.html#from_f64","fn "],["libbf.big.integer","","libbf.big.integer.html#cmp","fn "],["libbf.big.integer","","libbf.big.integer.html#mul_ui","fn "],["libbf.big.integer","","libbf.big.integer.html#mul_si","fn "],["libbf.big.integer","","libbf.big.integer.html#divrem","fn "],["libbf.big.integer","","libbf.big.integer.html#divrem_ctx","fn "],["libbf.big.integer","","libbf.big.integer.html#remquo","fn "],["libbf.big.integer","","libbf.big.integer.html#round","fn "],["libbf.big.integer","","libbf.big.integer.html#sqrtrem","fn "],["libbf.big.integer","","libbf.big.integer.html#isqrt","fn "],["libbf.big.integer","","libbf.big.integer.html#get_exp_min","fn "],["libbf.big.integer","","libbf.big.integer.html#logic_or","fn "],["libbf.big.integer","","libbf.big.integer.html#logic_xor","fn "],["libbf.big.integer","","libbf.big.integer.html#logic_and","fn "],["libbf.big.integer","","libbf.big.integer.html#from_str_base","fn "],["libbf.big.integer","","libbf.big.integer.html#from_str","fn "],];
